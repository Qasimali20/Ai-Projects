import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

# Load the advertising dataset
data = pd.read_csv("/content/advertising.csv")

# Define features (advertising budgets) and the target variable (sales)
X = data[["TV", "Radio", "Newspaper"]]
y = data["Sales"]

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a Linear Regression model
model = LinearRegression()

# Fit the model on the training data
model.fit(X_train, y_train)

# Make predictions on the test data
y_pred = model.predict(X_test)

# Evaluate the model
from sklearn.metrics import mean_squared_error, r2_score
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Squared Error: {mse:.2f}")
print(f"R-squared (R2): {r2:.2f}")

# Predict future sales based on future advertising budgets
future_budgets = pd.DataFrame({
    "TV": [200, 300, 400],
    "Radio": [40, 50, 60],
    "Newspaper": [20, 30, 40]
})

future_sales = model.predict(future_budgets)

print("Predicted Future Sales:")
for i, sales in enumerate(future_sales):
    print(f"Scenario {i + 1}: ${sales:.2f}")

# Visualize the results
plt.scatter(y_test, y_pred)
plt.xlabel("Actual Sales")
plt.ylabel("Predicted Sales")
plt.title("Actual vs. Predicted Sales")
plt.show()
